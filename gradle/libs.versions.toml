[versions]
# Android
androidGradlePlugin = "7.4.1"
compileTargetSdk = "33"
minSdk = "21"
versionCode = "1"

composeBom = "2023.01.00"
composeCompiler = "1.4.0"
activityCompose = "1.7.0-alpha03"
composeConstraintLayout = "1.0.1"
navigation = "2.6.0-alpha04"

lifecycleKtx = "2.5.1"

androidCoreTestKtx = "1.5.0"

coil = "2.2.2"
lottie = "5.2.0"
shimmer = "1.0.4"

# iOS
deploymentTarget = "14.0"

#KMM
kotlin = "1.8.0"
version = "1.0"
kotlinxSerialization = "1.4.1"
kotlinxCoroutines = "1.6.4"

sqlDelight = "2.0.0-alpha05"

ktor = "2.2.2"

kotlinCoroutinesTest = "1.6.4"
mockk = "1.13.2"
mockkCommon = "1.12.5"

[libraries]
#Android
composeBom = { module = "androidx.compose:compose-bom", version.ref = "composeBom" }
composeUi = { module = "androidx.compose.ui:ui" }
composeUiTooling = { module = "androidx.compose.ui:ui-tooling" }
composeUiToolingPreview = { module = "androidx.compose.ui:ui-tooling-preview" }
composeFoundation = { module = "androidx.compose.foundation:foundation" }
composeMaterial3 = { module = "androidx.compose.material3:material3" }
composeRuntime = { module = "androidx.lifecycle:lifecycle-runtime-compose"}
composeActivity = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
composeConstraintLayout = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "composeConstraintLayout"}
navigation = { module = "androidx.navigation:navigation-compose", version.ref ="navigation" }

viewModelKtx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycleKtx" }
liveDataKtx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycleKtx" }

sqldelightAndroidDriver = {module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }

ktorAndroidClient = { module = "io.ktor:ktor-client-android", version.ref = "ktor"}

coil = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
lottie = { module = "com.airbnb.android:lottie-compose", version.ref = "lottie" }
shimmer = { module = "com.valentinilk.shimmer:compose-shimmer", version.ref = "shimmer"}

#iOS
sqldelightIosDriver = {module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }

ktorIosClient = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor"}

#KMM
kotlinxSerialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerialization"}
kotlinxCoroutinesCore = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
androidCoreTestKtx = { module = "androidx.test:core-ktx", version.ref = "androidCoreTestKtx" }

ktorCore = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktorClientNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktorKotlinxJsonSerialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

kotlinCoroutinesTest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinCoroutinesTest" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockkCommon = { module = "io.mockk:mockk-common", version.ref = "mockkCommon" }


#JVM
sqldelightJavaDriver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqlDelight" }

[bundles]

[plugins]
sqlDelight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }
